
name: Java CI with Maven Deploy to heroku

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
  HEROKU_APP_NAME: ${{ 'app-spring-progrados' }}
  HEROKU_PSS_DB: ${{ secrets.HEROKU_PSS_DB }}

jobs:
  build_webapp:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    
    - name: Build with Maven
      run: mvn -B package --file demomvc/pom.xml -Dpassword_db_heroku=$HEROKU_PSS_DB

    #- name: Docker Build
    #  run: docker build -f "demomvc/DockerFile" .

    #- name: Docker login
    #  run: docker login --username=_ --password=$HEROKU_API_KEY registry.heroku.com

    #- name: Publish
    #  run: |
    #    heroku container:push web -a $HEROKU_APP_NAME
    #    heroku container:release web -a $HEROKU_APP_NAME


    - name: Build, Push and Release a Docker container to Heroku.
      uses: gonuit/heroku-docker-deploy@v1.3.2 
      with:

          heroku_api_key: $HEROKU_API_KEY
          
          heroku_app_name: $HEROKU_APP_NAME

          dockerfile_directory: ./demomvc

          dockerfile_name: DockerFile

          docker_options: "--no-cache"